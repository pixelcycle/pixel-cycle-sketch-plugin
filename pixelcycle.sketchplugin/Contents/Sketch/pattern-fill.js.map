{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/pattern-fill.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/settings\""],"names":["Shape","Rectangle","Settings","SketchAPI","context","MochaJSDelegate","selectorHandlerDict","uniqueClassName","NSUUID","UUID","UUIDString","delegateClassDesc","MOClassDescription","allocateDescriptionForClassWithName_superclass_","NSObject","registerClass","handlers","setHandlerForSelector","selectorString","func","handlerHasBeenSet","selector","NSSelectorFromString","dynamicHandler","functionToCall","apply","arguments","args","regex","exec","push","length","dynamicFunction","eval","join","addInstanceMethodWithSelector_function_","removeHandlerForSelector","getHandlerForSelector","getAllHandlers","getClass","NSClassFromString","getClassInstance","new","pluginSketchRoot","scriptPath","stringByDeletingLastPathComponent","htmlPath","url","encodeURI","width","height","floatWindow","frame","NSMakeRect","titleBgColor","NSColor","colorWithRed_green_blue_alpha","contentBgColor","identifier","threadDictionary","NSThread","mainThread","hiddenClose","Panel","NSPanel","alloc","init","setTitleVisibility","NSWindowTitleHidden","setTitlebarAppearsTransparent","standardWindowButton","NSWindowCloseButton","setHidden","NSWindowMiniaturizeButton","NSWindowZoomButton","setFrame_display","setBackgroundColor","setWorksWhenModal","becomeKeyWindow","setLevel","NSFloatingWindowLevel","COScript","currentCOScript","setShouldKeepAround_","contentView","webView","WebView","initWithFrame","windowObject","windowScriptObject","setWantsLayer","layer","setFrame","setMainFrameURL_","addSubview","delegate","webFrame","SketchAction","evaluateWebScript","request","NSURL","URLWithString","mainFrameURL","fragment","svgData","JSON","parse","decodeURI","valueForKey","selectedLayers","selection","selectedCount","l","parent","ddoc","Document","getSelectedDocument","selectedPage","svgCode","svgString","NSString","stringWithString","dataUsingEncoding","NSUTF8StringEncoding","svgImporter","MSSVGImporter","prepareToImportFromData","svgLayer","importAsLayer","setName","sketchObject","addLayers","document","showMessage","requestData","setSettingForKey","key","value","setting","settingForKey","setFrameLoadDelegate_","closeButton","setCOSJSTargetFunction","sender","removeObjectForKey","close","orderOut","nil","NSApp","stopModal","setAction","titlebarView","superview","titlebarViewController","view","titlebarContainerView","setFrameOrigin","NSMakePoint","setFrameSize","NSMakeSize","setTransparent","center","makeKeyAndOrderFront","runModalForWindow"],"mappings":"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","file":"pattern-fill.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/pattern-fill.js\");\n","\n\nconst Shape = require('sketch/dom').Shape\nconst Rectangle = require('sketch/dom').Rectangle\nconst Settings = require('sketch/settings')\n\nconst SketchAPI = require('sketch');\n\n\n\nexport default function(context) {\n\nconst MochaJSDelegate = function(selectorHandlerDict){\n  var uniqueClassName = \"MochaJSDelegate_DynamicClass_\" + NSUUID.UUID().UUIDString();\n\n  var delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(uniqueClassName, NSObject);\n\n  delegateClassDesc.registerClass();\n\n  //  Handler storage\n\n  var handlers = {};\n\n  //  Define interface\n\n  this.setHandlerForSelector = function(selectorString, func){\n    var handlerHasBeenSet = (selectorString in handlers);\n    var selector = NSSelectorFromString(selectorString);\n\n    handlers[selectorString] = func;\n\n    if(!handlerHasBeenSet){\n      /*\n        For some reason, Mocha acts weird about arguments:\n        https://github.com/logancollins/Mocha/issues/28\n\n        We have to basically create a dynamic handler with a likewise dynamic number of predefined arguments.\n      */\n\n      var dynamicHandler = function(){\n        var functionToCall = handlers[selectorString];\n\n        if(!functionToCall) return;\n\n        return functionToCall.apply(delegateClassDesc, arguments);\n      };\n\n      var args = [], regex = /:/g;\n      while(regex.exec(selectorString)) args.push(\"arg\"+args.length);\n\n      const dynamicFunction = eval(\"(function(\"+args.join(\",\")+\"){ return dynamicHandler.apply(this, arguments); })\");\n      //delegateClassDesc.addInstanceMethodWithSelector_function_(selector, function() {\n        //   func.apply(delegateClassDesc, arguments);\n      //});\n      delegateClassDesc.addInstanceMethodWithSelector_function_(selector, dynamicFunction);\n    }\n  };\n\n  this.removeHandlerForSelector = function(selectorString){\n    delete handlers[selectorString];\n  };\n\n  this.getHandlerForSelector = function(selectorString){\n    return handlers[selectorString];\n  };\n\n  this.getAllHandlers = function(){\n    return handlers;\n  };\n\n  this.getClass = function(){\n    return NSClassFromString(uniqueClassName);\n  };\n\n  this.getClassInstance = function(){\n    return NSClassFromString(uniqueClassName).new();\n  };\n\n  //  Conveience\n\n  if(typeof selectorHandlerDict == \"object\"){\n    for(var selectorString in selectorHandlerDict){\n      this.setHandlerForSelector(selectorString, selectorHandlerDict[selectorString]);\n    }\n  }\n};\n\n\n\n\n  const pluginSketchRoot = context.scriptPath\n    .stringByDeletingLastPathComponent()\n\n  const htmlPath = pluginSketchRoot + '/scripts/panel/panel.html'\n\n  const url = encodeURI(\"file://\" + htmlPath);\n\n  const width = 400\n  const height = 600\n\n  const floatWindow = true\n\n  const frame = NSMakeRect(0, 0, width, (height + 32))\n  // const titleBgColor = NSColor.colorWithRed_green_blue_alpha(0 / 255, 145 / 255, 234 / 255, 1)\n  const titleBgColor = NSColor.colorWithRed_green_blue_alpha(0 / 255, 102 / 255, 204 / 255, 1)\n  // const titleBgColor = NSColor.colorWithRed_green_blue_alpha(1, 1, 1, 1)\n  const contentBgColor = NSColor.colorWithRed_green_blue_alpha(1, 1, 1, 1)\n\n\n  const identifier = 'pixel-cycle-pattern-fill-panel'\n  const threadDictionary = NSThread.mainThread().threadDictionary();\n  if(threadDictionary[identifier]) {\n    // Window alrady open\n\n    // Development only:\n    // threadDictionary[identifier].close();\n    // threadDictionary.removeObjectForKey(identifier)\n\n    // Production only:\n    return false\n  }\n\n  const hiddenClose = false;\n\n  // let Panel = null\n  // if(threadDictionary[identifier]) {\n  //   Panel = threadDictionary[identifier]\n  // } else {\n  //   Panel = NSPanel.alloc().init();\n  // }\n  const Panel = NSPanel.alloc().init();\n\n\n  Panel.setTitleVisibility(NSWindowTitleHidden);\n  Panel.setTitlebarAppearsTransparent(true);\n  Panel.standardWindowButton(NSWindowCloseButton).setHidden(hiddenClose);\n  Panel.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true);\n  Panel.standardWindowButton(NSWindowZoomButton).setHidden(true);\n  Panel.setFrame_display(frame, true);\n  Panel.setBackgroundColor(contentBgColor);\n  Panel.setWorksWhenModal(true);\n\n  if(floatWindow) {\n    Panel.becomeKeyWindow();\n    Panel.setLevel(NSFloatingWindowLevel);\n    threadDictionary[identifier] = Panel;\n    // Long-running script\n    COScript.currentCOScript().setShouldKeepAround_(true);\n  }\n\n\n\n  const contentView = Panel.contentView()\n  let webView = WebView.alloc().initWithFrame(NSMakeRect(0, 0, width, height));\n  const windowObject = webView.windowScriptObject();\n  contentView.setWantsLayer(true);\n  contentView.layer().setFrame(contentView.frame());\n  webView.setBackgroundColor(contentBgColor);\n  webView.setMainFrameURL_(url);\n  contentView.addSubview(webView);\n\n  const delegate = new MochaJSDelegate({\n    \"webView:didFinishLoadForFrame:\": (function (webView, webFrame) {\n      const SketchAction = [\n        \"function SketchAction(hash, data) { \",\n          \"if(data){ window.PixelCycleData = encodeURI(JSON.stringify(data)); }\",\n          \"window.location.hash = hash;\",\n        \"}\"\n      ].join(\"\")\n      // DOMReady = [\n      //   \"$(\", \"function(){\", \"init(\" + JSON.stringify(options.data) + \")\", \"}\",\");\"\n      // ].join(\"\");\n      windowObject.evaluateWebScript(SketchAction);\n      // windowObject.evaluateWebScript(DOMReady);\n    }),\n    \"webView:didChangeLocationWithinPageForFrame:\": (function (webView, webFrame) {\n      const request = NSURL.URLWithString(webView.mainFrameURL()).fragment();\n\n      if (request == \"insertImage\") {\n        const svgData = JSON.parse(decodeURI(windowObject.valueForKey(\"PixelCycleData\")));\n\n        const selectedLayers = context.selection\n        const selectedCount = selectedLayers.length\n\n        if(selectedLayers && selectedLayers.length > 0) {\n          const l = selectedLayers[0]\n\n          //// Example getting parent of selected layer:\n\n          // l.style().contextSettings().setOpacity(Math.random())\n          // const frame = new Rectangle(0, 0, 200, 200)\n          // const s = new Shape({\n          //   name: 'test shape',\n          //   frame: frame\n          // })\n          // let parent = selectedLayers[0].parent;\n          // if(!parent){\n          //   parent = SketchAPI.fromNative(selectedLayers[0].parentPage())            \n          // }\n\n        }\n\n        let parent = null\n  \n\n        //// Another parent example:\n\n        // const selectedLayers = context.selection\n        // const selectedCount = selectedLayers.length\n\n        // if(selectedLayers && selectedLayers.length > 0) {\n          // parent = SketchAPI.fromNative(selectedLayers[0])\n          // if(selectedLayers[0].parent) {\n          //   parent = selectedLayers[0].parent\n          // }\n          // const l = selectedLayers[0]\n          // parent = selectedLayers[0].parent;\n          // if(!parent){\n          //   parent = SketchAPI.fromNative(selectedLayers[0].parentPage())            \n          // }\n        // }\n\n        if(!parent) {\n          const ddoc = SketchAPI.Document.getSelectedDocument()\n          parent = ddoc.selectedPage          \n        }\n\n          // const g = new SketchAPI.Group({\n          //   layers: selectedLayers,\n          //   parent: parent\n          // });\n\n          // const g = new SketchAPI.Group({\n          //   name: 'testing',\n          //   layers: [l],\n          //   frame,\n          //   parent: context.document\n          // })\n\n          // l.addLayers([s.sketchObject])\n\n          const svgCode = svgData\n\n          var svgString = NSString.stringWithString(svgCode);\n          var svgData = svgString.dataUsingEncoding(NSUTF8StringEncoding);\n\n          var svgImporter = MSSVGImporter.svgImporter();\n          svgImporter.prepareToImportFromData(svgData);\n          var svgLayer = svgImporter.importAsLayer();\n\n          svgLayer.setName('PixelCycle.ai Image');\n\n          // const d = SketchAPI.fromNative(context.document)\n          // l.addLayers([svgLayer])\n\n          parent.sketchObject.addLayers([svgLayer])\n\n          // context.document.addLayers([svgLayer])\n          // MSMaskWithShape.createMaskWithShapeForLayers(group)\n          // context.document.currentPage().addLayers([svgLayer]);\n\n          context.document.showMessage(\"🎉 SVG inserted!\");\n      }\n\n\n\n\n      if(request == 'setSetting') {\n        const requestData = JSON.parse(decodeURI(windowObject.valueForKey(\"PixelCycleData\")));\n        Settings.setSettingForKey(requestData.key, requestData.value)\n      }\n\n\n      if(request == 'getSetting') {\n        const requestData = JSON.parse(decodeURI(windowObject.valueForKey(\"PixelCycleData\")));\n        const setting = Settings.settingForKey(requestData.key)\n\n        if(setting) {\n          windowObject.evaluateWebScript(`passData('got_setting', '{\"key\": \"${requestData.key}\", \"value\": \"${setting}\"}');`);\n        }\n      }\n\n      \n\n\n      windowObject.evaluateWebScript(\"window.location.hash = '';\");\n    })\n  });\n\n  webView.setFrameLoadDelegate_(delegate.getClassInstance());\n\n\n\n  const closeButton = Panel.standardWindowButton(NSWindowCloseButton);\n  closeButton.setCOSJSTargetFunction(function (sender) {\n    threadDictionary.removeObjectForKey(identifier)\n    if(floatWindow) {\n      COScript.currentCOScript().setShouldKeepAround_(false);\n      Panel.close();\n      // Develop mode? kill the script\n    } else {\n      Panel.orderOut(nil);\n      NSApp.stopModal();\n    }\n  });\n  closeButton.setAction(\"callAction:\");\n  var titlebarView = contentView.superview().titlebarViewController().view(),\n  titlebarContainerView = titlebarView.superview();\n  closeButton.setFrameOrigin(NSMakePoint(8, 8));\n  titlebarContainerView.setFrame(NSMakeRect(0, height, width, 32));\n  titlebarView.setFrameSize(NSMakeSize(width, 32));\n  titlebarView.setTransparent(true);\n  titlebarView.setBackgroundColor(titleBgColor);\n  titlebarContainerView.superview().setBackgroundColor(titleBgColor);\n\n\n  // NSApp.runModalForWindow(Panel);\n\n  if(floatWindow) {\n    Panel.center();\n    Panel.makeKeyAndOrderFront(nil);    \n  } else {\n    NSApp.runModalForWindow(Panel);\n  }\n\n  // const selectedLayers = context.selection\n  // const selectedCount = selectedLayers.length\n\n  // if(selectedLayers && selectedLayers.length > 0) {\n  //   const l = selectedLayers[0]\n  //   l.style().contextSettings().setOpacity(Math.random())\n  // }\n  \n  // if (selectedCount === 0) {\n  //   context.document.showMessage('No layers are selected.')\n  // } else {\n  //   context.document.showMessage(`${selectedCount} layers selected.`)\n  // }\n}\n","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/settings\");"],"sourceRoot":""}